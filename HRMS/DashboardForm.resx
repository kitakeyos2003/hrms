<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>